{"version":3,"sources":["angular/controllers.coffee"],"names":[],"mappings":"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","file":"angular/controllers.js","sourceRoot":"/source/","sourcesContent":["define [\n  \"angular\"\n  \"lodash\"\n  \"jquery\"\n  \"services\"\n#  \"angularRender\"\n  \"angularOff\"\n\n],(angular,_,$) ->\n  \"use strict\"\n  # Controllers\n  controller = angular.module(\"App.controllers\",[\"App.services\"])\n  controllers = {}\n  controllers.MyCtrl = [\n    '$scope'\n    '$upload'\n    ($scope,$upload) ->\n      $scope.$watch 'files',->\n        $scope.upload $scope.files\n      $scope.upload = (files) ->\n        if files and files.length\n          i = 0\n          while i < files.length\n            file = files[i]\n            $upload.upload(\n              url : 'linecategories/upload'\n              fields :\n                username : 'ASDAlexey'\n              file : file\n            ).progress((evt) ->\n              progressPercentage = parseInt(100.0 * evt.loaded / evt.total)\n              console.log 'progress: ' + progressPercentage + '% ' + evt.config.file.name\n            ).success (data,status,headers,config) ->\n              console.log(data)\n            #              console.log 'file ' + config.file.name + 'uploaded. Response: ' + angular.fromJSON(data)\n            i++\n  ]\n  controllers.FileCtrl = [\n    '$scope'\n    \"$http\"\n    \"$q\"\n    ($scope,$http,$q) ->\n      $scope.filesObj = {}\n      $scope.setFileObj = (name)->\n        $scope.filesObj[name] = {\n          arrFilesServer : []\n          arrFilesBeforeSend : []\n          currentLoadPersent : 0\n        }\n      $scope.removeServerFile = ()->\n\n      $scope.removeFile = (file,nameGroup)->\n        $scope.filesObj[nameGroup].arrFilesBeforeSend.splice($scope.filesObj[nameGroup].arrFilesBeforeSend.indexOf(file),1)\n      $scope.send = (filesObj,url)=>\n        promise = $q.all({})\n        bufferArr = {}\n        currentLoad = 0\n        total = 0\n        angular.forEach filesObj,(value,key) ->\n          total += _.sum(value.arrFilesBeforeSend,'size')\n        angular.forEach filesObj,(v,k) ->\n          bufferArr[k] = []\n          angular.forEach v.arrFilesBeforeSend,(value,key) ->\n            fd = new FormData()\n            fd.append value.id,value.file\n            promise = promise.then(->\n              $http(\n                url : url\n                method : \"POST\"\n                data : fd\n                transformRequest : angular.identity,\n                headers : {'Content-Type' : undefined}\n              ).then (res) ->\n                bufferArr[k].push res.data[0]\n                currentLoad += _.result _.findWhere(v.arrFilesBeforeSend,{id : res.data[0].id}),'size'\n                $scope.currentLoadPersent = parseInt(currentLoad * 100 / total)\n            )\n        promise.then ->\n          angular.forEach $scope.filesObj,(value,key) ->\n            $scope.filesObj[key].arrFilesServer = _.union($scope.filesObj[key].arrFilesServer,bufferArr[key])\n            $scope.currentLoadPersent = 0\n            $scope.filesObj[key].arrFilesBeforeSend.length = 0\n  ]\n  #  controllers.FileCtrl = [\n  #    '$scope'\n  #    \"$http\"\n  #    \"$q\"\n  #    ($scope,$http,$q) ->\n  #      $scope.filesObj={}\n  #      $scope.arrFilesServer = []\n  #      $scope.arrFilesBeforeSend = []\n  #      $scope.currentLoadPersent=0\n  #      $scope.send = (arrFiles,url)=>\n  #        promise = $q.all({})\n  #        currentLoad=0\n  #        total=_.sum(arrFiles, 'size')\n  #        bufferArr=[]\n  #        angular.forEach arrFiles,(value,key) ->\n  #          fd = new FormData()\n  #          fd.append value.id,value.file\n  #          promise = promise.then(->\n  #            $http(\n  #              url : url\n  #              method : \"POST\"\n  #              data : fd\n  #              transformRequest : angular.identity,\n  #              headers : {'Content-Type' : undefined}\n  #            ).then (res) ->\n  #              bufferArr.push res.data[0]\n  #              currentLoad+=_.result _.findWhere(arrFiles,{id : res.data[0].id}),'size'\n  #              $scope.currentLoadPersent=parseInt(currentLoad*100/total)\n  #          )\n  #        promise.then ->\n  #          $scope.arrFilesServer=_.union($scope.arrFilesServer,bufferArr)\n  #          $scope.currentLoadPersent=0\n  #          $scope.arrFilesBeforeSend.length=0\n  #          console.log($scope.arrFilesServer)\n  #  ]\n  controllers.UserSessionsCtrl = [\n    \"$scope\"\n    ($scope) ->\n      $scope.$on 'auth:login-error',(ev,reason)->\n        $scope.error = reason.errors[0]\n  ]\n  controllers.UserRegistrationsCtrl = [\n    \"$scope\"\n    \"$location\"\n    \"$auth\"\n    ($scope,$location,$auth) ->\n      $scope.$on 'auth:registration-email-error',(ev,reason)->\n        $scope.error = reason.errors[0]\n      $scope.handleRegBtnClick = ->\n        $auth.submitRegistration($scope.registrationForm).then ->\n          $auth.submitLogin\n            email : $scope.registrationForm.email\n            password : $scope.registrationForm.password\n  ]\n  controllers.GroupsCtrl = [\n    \"$scope\"\n    ($scope) ->\n      $scope.groups = ['Group One','Group Two']\n      console.log($scope.groups)\n  ]\n  controllers.indexCtrl = [\n    \"$scope\"\n    \"$location\"\n    \"config\"\n    \"$rootScope\"\n    \"Linecategory\"\n    \"$sce\"\n    ($scope,$location,config,$rootScope,Linecategory,$sce) ->\n      $scope.absUrl = $location.absUrl()\n      $scope.menu = []\n      $scope.config = config\n      $scope.categoryImages = [\n        {\n          \"src\" : \"zodiac.jpg\",\n          \"width\" : 1920\n          \"height\" : 1080\n        }\n        {\n          \"src\" : \"devination.jpg\"\n          \"width\" : 1934\n          \"height\" : 836\n        }\n        {\n          \"src\" : \"dream_interpretation.jpg\"\n          \"width\" : 1920\n          \"height\" : 1440\n        }\n        {\n          \"src\" : \"tests.jpg\"\n          \"width\" : 1920\n          \"height\" : 1200\n        }\n        {\n          \"src\" : \"beauty_and_health.jpg\"\n          \"width\" : 1920\n          \"height\" : 412\n        }\n        {\n          \"src\" : \"food.jpg\"\n          \"width\" : 2560\n          \"height\" : 1600\n        }\n        {\n          \"src\" : \"names.jpg\"\n          \"width\" : 1920\n          \"height\" : 1363\n        }\n      ]\n      $scope.fullPathCategoryImages = _.each($scope.categoryImages,(value)->\n        value.src = 'app/images/categories_images/' + value.src\n      )\n      ###Linecategory.find().$promise.then (data) ->\n        $scope.categories = data###\n      ###$scope.aInvocies = Invoice.find({\n        filter: {\n          include: [\"merchant\", \"staff\"],\n          limit: params.count(),\n          offset: (params.page() - 1) * params.count(),\n          order: gridManager.fnTableSortingToApiParams(params.sorting()),\n          where: gridManager.fnTableFiltersToApiParams(params.filter())\n        }\n      }, function(aInvocies){\n      // Query to get Staffs count\n      // @todo: maybe get stuff amount just once - but problem with updating\n      Invoice.count({\n        where: gridManager.fnTableFiltersToApiParams(params.filter())\n      }, function(oCountData){\n      // Update table params\n      params.total(oCountData.count);\n      // Set new data\n\n      $defer.resolve(aInvocies);\n      });\n      }, function(oError){\n    $scope.oErrors = errorParser.parseValidationError(oError, {}, $scope.aMessages);\n      });###\n      $scope.linecategories = Linecategory.find({filter:{include : [\"categories\"]}},\n        (arr) ->\n          console.log(arr)\n        (err) ->\n          console.log(err)\n      )\n  ]\n  controllers.lineCategoryCtrl = [\n    \"$scope\"\n    \"$location\"\n    \"config\"\n    \"$rootScope\"\n    \"$stateParams\"\n    \"Linecategory\"\n    \"Article\"\n    ($scope,$location,config,$rootScope,$stateParams,Linecategory,Article) ->\n      $scope.absUrl = $location.absUrl()\n      $scope.params = $stateParams;\n      console.log($scope.absUrl)\n      $scope.Linecategory = Linecategory.find(\n        (list) ->\n          console.log('s')\n        (errorResponse) ->\n          console.log('rrr')\n      )\n#      Article.findOne($scope.params.lineCategory,'linecategories').then (data) ->\n#        $scope.categories = data\n#        console.log($scope.categories)\n  ]\n  controllers.categoryCtrl = [\n    \"$scope\"\n    \"$location\"\n    \"config\"\n    \"$rootScope\"\n    \"$stateParams\"\n    \"Article\"\n    ($scope,$location,config,$rootScope,$stateParams,Articles) ->\n      $scope.absUrl = $location.absUrl()\n      $scope.params = $stateParams;\n#      Articles.findAll(\"linecategories/#{$scope.params.lineCategory}/categories\").then (data) ->\n#        $scope.category = _.findWhere(data,{slug : $scope.params.category})\n  ]\n  controllers.articleCtrl = [\n    \"$scope\"\n    ($scope) ->\n#      console.log('ArticleCtrl')\n  ]\n  ###  controllers.ArticleCtrl = [\n    \"$scope\"\n    \"$location\"\n    \"config\"\n    \"$rootScope\"\n    \"$routeParams\"\n    \"Article\"\n    ($scope,$location,config,$rootScope,$routeParams,Articles) ->\n      $scope.params = $routeParams;\n      console.log('ArtilceCtrl')\n#      console.log($scope.params)\n#          Articles.findOne(\"linecategories/#{$scope.params.lineCategory}/articles/\").then (data) ->\n#            $scope.category=_.findWhere(data, {slug: $scope.params.category})\n#            console.log($scope.category)\n    ]###\n  controllers.pageCtrl = [\n    \"$scope\"\n    \"$location\"\n    \"config\"\n    \"$rootScope\"\n    ($scope,$location,config,$rootScope) ->\n      $scope.config = config;\n      $scope.choise1 = [\n        {\n          icon : \"<img  src=\\\"https://cdn1.iconfinder.com/data/icons/fatcow/32/opera.png\\\" />\"\n          name : \"Куплю\"\n          ticked : true\n        }\n        {\n          icon : \"<img  src=\\\"https://cdn1.iconfinder.com/data/icons/fatcow/32/internet_explorer.png\\\" />\"\n          name : \"Продам\"\n          ticked : false\n        }\n        {\n          icon : \"<img  src=\\\"https://cdn1.iconfinder.com/data/icons/fatcow/32/internet_explorer.png\\\" />\"\n          name : \"Сниму\"\n          ticked : false\n        }\n        {\n          icon : \"<img  src=\\\"https://cdn1.iconfinder.com/data/icons/fatcow/32/internet_explorer.png\\\" />\"\n          name : \"Сдам\"\n          ticked : false\n        }\n      ]\n  ]\n  controllers.bodyCtrl = [\n    \"$scope\"\n    \"$rootScope\"\n    ($scope,$rootScope) ->\n      $rootScope.heightObj = {}\n  ]\n  controllers.DragMenuCtrl = [\n    \"$scope\"\n    \"$rootScope\"\n    \"RDMStorage\"\n    ($scope,$rootScope,RDMStorage) ->\n      $rootScope.degree = 0\n      degArc = 360 / 7\n      $scope.rotateMenu = (side,count)->\n        if side is 'left'\n          $rootScope.degree += degArc\n        else\n          $rootScope.degree -= degArc\n      dataTlRDM = localStorage.getItem(\"tlRDM\")\n      if dataTlRDM and dataTlRDM is 'true'\n        $rootScope.isShowRDM = false\n      else\n        $rootScope.isShowRDM = true\n      $scope.showHideRDM = ()->\n        $rootScope.isShowRDM = !$rootScope.isShowRDM\n  ]\n  controllers.popupCtrl = [\n    \"$scope\"\n    \"$rootScope\"\n    ($scope,$rootScope) ->\n      $scope.isPopupActive = false\n      $rootScope.triggerPopupShow = (mes = '',product = '')->\n        $scope.isPopupActive = !$scope.isPopupActive\n  ]\n  controllers.scrollCtrl = [\n    \"$scope\"\n    \"$timeout\"\n    \"$rootScope\"\n    \"$location\"\n    ($scope,$timeout,$rootScope,$location) ->\n      $scope.absUrl = $location.absUrl()\n      #      $rootScope.timer = new Date()\n      #      $scope.$on('$viewContentLoaded',->\n      #        t = new Date() - $rootScope.timer\n      #        console.log('View loaded: ' + t)\n      #      )\n      #      $scope.$on('$nodesDOMRendered',(e)->\n      #        console.log('$nodesDOMRendered')\n      #        t = new Date() - $rootScope.timer\n      #        console.log('View rendered: ' + t)\n      #      )\n\n      $scope.scrollClick = 0\n      $scope.scrollToElement = (element,offset,duration)->\n        $scope.scrollClick++\n        $scope.scrollProperty = {\n          element : element\n          offset : offset\n          duration : duration\n        }\n      #Отмена изменения пути в AngularJS\n      $rootScope.routLoad = false\n#      routeChange = (event,newUrl)->\n#        event.preventDefault()\n#        console.log('start')\n#        $('.preloader').removeClass('hideAnimation').removeClass('hidden')\n##        $rootScope.$off('$locationChangeStart',routeChange)\n##        onRouteChangeOff()\n#        $timeout (->\n#          console.log(newUrl)\n#          $location.path(newUrl)\n#          $rootScope.routLoad=true\n#        ),800\n#      $rootScope.$on('$locationChangeStart',routeChange)\n#      $rootScope.$on \"$routeChangeStart\",(event, next, current)->\n#        $timeout (->\n#          console.log(onRouteChangeOff())\n#        ),900\n#      $rootScope.$on '$locationChangeSuccess',->\n#        $timeout (->\n#          if $rootScope.routLoad\n#            console.log('success')\n#            $rootScope.routLoad=false\n##            $rootScope.$on('$locationChangeStart',routeChange)\n#            return\n#        ),900\n##        $rootScope.$on('$locationChangeStart',routeChange)\n#      onRouteChange=$rootScope.$on '$locationChangeStart',(e,newUrl) ->\n#        e.preventDefault()\n#        onRouteChange()\n#        $timeout (->\n#          $location.path(newUrl)\n#        ),1000\n#        console.log($location.search())\n#        $location.path($location.search().goto)\n##        return\n#        $('.preloader').removeClass('hideAnimation').removeClass('hidden')\n#        next = parseRoute().$$route\n#        console.log(next)\n  ]\n  controllers.currencylangCtrl = [\n    \"$scope\"\n    ($scope) ->\n      $scope.currency = [\n        {\n          icon : \"<span class=\\\"currency rub\\\"></span>\"\n          name : \"рубль\"\n          ticked : true\n        }\n        {\n          icon : \"<span class=\\\"currency usd\\\"></span>\"\n          name : \"доллар\"\n          ticked : false\n        }\n        {\n          icon : \"<span class=\\\"currency eur\\\"></span>\"\n          name : \"евро\"\n          ticked : false\n        }\n      ]\n      $scope.lang = [\n        {\n          icon : \"<span class=\\\"lang ru\\\"></span>\"\n          name : \"рус.\"\n          ticked : true\n        }\n        {\n          icon : \"<span class=\\\"lang en\\\"></span>\"\n          name : \"англ.\"\n          ticked : false\n        }\n      ]\n  ]\n  controllers.formValidation = [\n    \"$scope\"\n    \"$http\"\n    \"$rootScope\"\n    \"$timeout\"\n    ($scope,$http,$rootScope,$timeout) ->\n      $scope.choise1 = [\n        {\n          icon : \"<span class=\\\"choise buy\\\"></span>\"\n          name : \"Куплю\"\n          ticked : true\n        }\n        {\n          icon : \"<span class=\\\"choise sell\\\"></span>\"\n          name : \"Продам\"\n          ticked : false\n        }\n        {\n          icon : \"<span class=\\\"choise exchange\\\"></span>\"\n          name : \"Сниму\"\n          ticked : false\n        }\n        {\n          icon : \"<span class=\\\"choise rent\\\"></span>\"\n          name : \"Сдам\"\n          ticked : false\n        }\n      ]\n      $scope.choise2 = [\n        {\n          icon : \"\"\n          name : \"Вид недвижимости\"\n          ticked : true\n        }\n        {\n          icon : \"\"\n          name : \"Квартиры\"\n          ticked : false\n        }\n        {\n          icon : \"\"\n          name : \"Дома, дачи, коттеджи\"\n          ticked : false\n        }\n        {\n          icon : \"\"\n          name : \"Коммерческая недвижимость\"\n          ticked : false\n        }\n        {\n          icon : \"\"\n          name : \"Земельные участки\"\n          ticked : false\n        }\n        {\n          icon : \"\"\n          name : \"Комнаты\"\n          ticked : false\n        }\n        {\n          icon : \"\"\n          name : \"Гаражи и машиноместа\"\n          ticked : false\n        }\n        {\n          icon : \"\"\n          name : \"Недвижимость за рубежом\"\n          ticked : false\n        }\n      ]\n      $scope.choise3 = [\n        {\n          icon : \"\"\n          name : \"На длительный срок\"\n          ticked : true\n        }\n        {\n          icon : \"\"\n          name : \"На короткий срок\"\n          ticked : false\n        }\n      ]\n      $rootScope.formIsValide = false\n      $scope.form_set_pristine = (form) ->\n        if form.$setPristine\n          form.$setPristine()\n      $scope.form_set_dirty = (form) ->\n        if form.$setDirty\n          form.$setDirty()\n          angular.forEach form,(input,key) ->\n            if typeof input is 'object' and input.$name isnt `undefined`\n              form[input.$name].$setViewValue (if form[input.$name].$viewValue isnt `undefined` then form[input.$name].$viewValue else \"\")\n      $scope.send = (dataForm,formValidate)=>\n        if formValidate.$valid\n          $rootScope.formIsValide = true\n          $timeout(->\n            $rootScope.hideThank()\n          ,2500)\n          $http(\n            url : \"controllers/mail.php\"\n            method : \"POST\"\n            data : $scope.dataForm\n          ).success((data,status,headers,config) ->\n            $scope.data = data\n          ).error (data,status,headers,config) ->\n            $scope.status = status\n          $scope.dataForm = {}\n          $scope.form_set_pristine(formValidate)\n        else\n          $scope.form_set_dirty(formValidate)\n      $rootScope.hideThank = ()->\n        $rootScope.formIsValide = false\n  ]\n  controllers.yaCtrl = [\n    \"$scope\"\n    ($scope) ->\n      $scope.geoObjects = [\n        {\n# Геометрия = тип объекта + географические координаты объекта\n          geometry :\n# Тип геометрии - точка\n            type : \"Point\"\n# Координаты точки.\n            coordinates : [\n              37.443915\n              55.710896\n            ]\n# Свойства\n          properties :\n            hintContent : \"Москва, ул.Верейская ул. д17\"\n        }\n      ]\n  ]\n  controllers.catCtrl = [\n    \"$scope\"\n    \"$location\"\n    \"config\"\n    \"$rootScope\"\n    ($scope,$location,config,$rootScope) ->\n      $scope.path = config.path\n      $rootScope.page = $location.path()\n      $scope.config = config\n  ]\n\n  controller.controller(controllers)\n  controller\n"]}