"use strict";
angular.module("yaMap",[]).constant("GEOMETRY_TYPES",{
    POINT:"Point",
    LINESTRING:"LineString",
    RECTANGLE:"Rectangle",
    POLYGON:"Polygon",
    CIRCLE:"Circle"
}).provider("yaMapSettings",function(){
    var e={version:"2.1",lang:"ru_RU",order:"longlat"};
    this.setLanguage=function(t){
        return e.lang=t, this
    }, this.setOrder=function(t){
        return e.order=t, this
    }, this.$get=[function(){
        return e
    }]
}).factory("mapApiLoad",["yaMapSettings",function(e){
    var t=!1,a=[],n=function(){
        for(var e; a.length;)e=a.splice(0,1), e[0]()
    },o="//api-maps.yandex.ru/"+e.version+"/?load=package.full&lang="+e.lang+"&coordorder="+e.order,r=!1,i=function(e,t){
        if(!r){
            r= !0;
            var a=document.createElement("script");
            a.type="text/javascript", a.readyState?a.onreadystatechange=function(){
                ("loaded"==a.readyState||"complete"==a.readyState)&&(a.onreadystatechange=null, t())
            }:a.onload=function(){
                t()
            }, a.src=e, document.getElementsByTagName("head")[0].appendChild(a)
        }
    };
    return function(e){
        a.push(e), t?n():r||i(o,function(){
            ymaps.ready(function(){
                t= !0, n()
            })
        })
    }
}]).service("yaLayer",[function(){
    this.create=function(e,t){
        return new ymaps.Layer(e,t)
    }
}]).service("yaMapType",[function(){
    this.create=function(e,t){
        return new ymaps.MapType(e,t)
    }
}]).service("layerStorage",["mapApiLoad",function(e){
    this.get=function(t){
        if(this._storage)t(this._storage);else{
            var a=this;
            e(function(){
                a._storage=ymaps.layer.storage, t(a._storage)
            })
        }
    }
}]).service("mapTypeStorage",["mapApiLoad",function(e){
    this.get=function(t){
        if(this._storage)t(this._storage);else{
            var a=this;
            e(function(){
                a._storage=ymaps.mapType.storage, t(a._storage)
            })
        }
    }
}]).service("yaSubscriber",function(){
    var e=/^yaEvent(\w*)?([A-Z]{1}[a-z]+)$/;
    this.subscribe=function(t,a,n,o){
        var r=e.exec(n),i=r[2].toLowerCase(),c=r[1]?r[1][1].toLowerCase()+r[1].substring(1):void 0;
        o[n]=function(e){
            return a(o.$parent||o,e)
        };
        var s=c?t[c].events:t.events;
        s.add(i,function(e){
            setTimeout(function(){
                o.$apply(function(){
                    o[n]({$event:e})
                })
            })
        })
    }
}).service("templateLayoutFactory",["mapApiLoad",function(e){
    this._cache={}, this.get=function(e){
        return this._cache[e]
    }, this.create=function(t,a,n){
        if(!this._cache[t]){
            var o=this;
            e(function(){
                o._cache[t]=ymaps.templateLayoutFactory.createClass(a,n)
            })
        }
    }
}]).directive("yaTemplateLayout",["templateLayoutFactory",function(e){
    return {
        restrict:"E",priority:1001,scope:{overrides:"=yaOverrides"},compile:function(t){
            var a=t.html();
            return t.html(""), function(t,n,o){
                if(!o.yaKey)throw new Error('not require attribute "key"');
                var r=o.yaKey;
                e.create(r,a,t.overrides)
            }
        }
    }
}]).controller("YaMapCtrl",["$scope","mapApiLoad",function(e,t){
    var a=this;
    t(function(){
        a.addGeoObjects=function(t){
            e.map.geoObjects.add(t)
        }, a.removeGeoObjects=function(t){
            e.map.geoObjects.remove(t)
        }, a.addControl=function(t,a){
            e.map.controls.add(t,a)
        }, a.getMap=function(){
            return e.map
        }, a.addImageLayer=function(t,a){
            var n=new ymaps.Layer(t,a);
            e.map.layers.add(n)
        }, a.addHotspotLayer=function(t,a,n){
            var o=new ymaps.hotspot.ObjectSource(t,a),r=new ymaps.hotspot.Layer(o,n);
            e.map.layers.add(r)
        }
    })
}]).directive("yaMap",["$compile","mapApiLoad","yaMapSettings","$window","yaSubscriber","$parse","$q","$timeout",function(e,t,a,n,o,r,i,c){
    return {
        restrict:"E",scope:{yaCenter:"@",yaType:"@",yaBeforeInit:"&",yaAfterInit:"&"},compile:function(a){
            var n=a.children(),s=null;
            return a.html(""), function(a,u,l){
                var y=function(e){
                    try{
                        return a.$eval(e)
                    }catch(t){
                        return e
                    }
                },p=function(e){
                    return s&&s.reject(), s=i.defer(), e?angular.isArray(e)?c(function(){
                        s.resolve(e)
                    }):angular.isString(e)&&t(function(){
                        ymaps.geocode(e,{results:1}).then(function(e){
                            var t=e.geoObjects.get(0);
                            a.$apply(function(){
                                s.resolve(t.geometry.getCoordinates())
                            })
                        },function(e){
                            a.$apply(function(){
                                s.reject(e)
                            })
                        })
                    }):t(function(){
                        ymaps.geolocation.get({provider:"yandex"}).then(function(e){
                            c(function(){
                                s.resolve(e.geoObjects.position)
                            })
                        })
                    }), s.promise
                },f=Number(l.yaZoom),d=l.yaBehaviors?l.yaBehaviors.split(" "):["default"],v=["default"];
                l.yaControls?v=l.yaControls.split(" "):angular.isDefined(l.yaControls)&&(v=[]);
                for(var m,g=[],h=[],b=0,$=d.length; $>b; b++)m=d[b], "-"===m[0]?g.push(m.substring(1)):h.push(m);
                0>f?f=0:f>23&&(f=23);
                var O,L=function(c){
                    var s=i.defer();
                    return t(function(){
                        a.yaBeforeInit();
                        var t=l.yaOptions?a.$eval(l.yaOptions):void 0;
                        t&&t.projection&&(t.projection=new ymaps.projection[t.projection.type](t.projection.bounds)), a.map=new ymaps.Map(u[0],{
                            center:c,
                            zoom:f,
                            controls:v,
                            type:l.yaType||"yandex#map",
                            behaviors:h
                        },t), a.map.behaviors.disable(g);
                        for(var i in l)if(0===i.indexOf("yaEvent")){
                            var y=r(l[i]);
                            o.subscribe(a.map,y,i,a)
                        }
                        s.resolve(a.map), a.yaAfterInit({$target:a.map}), u.append(n), setTimeout(function(){
                            a.$apply(function(){
                                e(u.children())(a.$parent)
                            })
                        })
                    }), s.promise
                };
                a.$watch("yaCenter",function(e){
                    var t=y(e);
                    p(t).then(function(e){
                        if(!O){
                            O=L(e);
                            var t=!0
                        }
                        O.then(function(a){
                            t||a.setCenter(e)
                        })
                    })
                }), a.$watch("yaType",function(e){
                    e&&O&&O.then(function(t){
                        t.setType(e)
                    })
                }), a.$on("$destroy",function(){
                    a.map&&a.map.destroy()
                })
            }
        },controller:"YaMapCtrl"
    }
}]).directive("yaControl",["yaSubscriber","templateLayoutFactory","$parse",function(e,t,a){
    return {
        restrict:"E",require:"^yaMap",scope:{yaAfterInit:"&"},link:function(n,o,r,i){
            var c=r.yaType[0].toUpperCase()+r.yaType.substring(1),s=function(e){
                try{
                    return n.$eval(e)
                }catch(t){
                    return e
                }
            },u=s(r.yaParams),l=r.yaOptions?n.$eval(r.yaOptions):void 0;
            if(l&&l.layout&&(l.layout=t.get(l.layout)), l&&l.itemLayout&&(l.itemLayout=t.get(l.itemLayout)), u&&u.items){
                for(var y,p=[],f=0,d=u.items.length; d>f; f++)y=u.items[f], p.push(new ymaps.control.ListBoxItem(y));
                u.items=p
            }
            var v=new ymaps.control[c](u);
            for(var m in l)l.hasOwnProperty(m)&&v.options.set(m,l[m]);
            for(m in r)if(0===m.indexOf("yaEvent")){
                var g=a(r[m]);
                e.subscribe(v,g,m,n)
            }
            i.addControl(v,l), n.yaAfterInit({$target:v})
        }
    }
}]).controller("CollectionCtrl",["$scope",function(e){
    this.addGeoObjects=function(t){
        e.collection.add(t)
    }, this.removeGeoObjects=function(t){
        e.collection.remove(t)
    }
}]).directive("yaCollection",["$compile","yaMapSettings","$timeout","yaSubscriber","$parse",function(e,t,a,n,o){
    return {
        require:"^yaMap",restrict:"E",scope:{yaAfterInit:"&"},compile:function(t){
            var r=t.contents();
            return t.html(""), function(t,i,c,s){
                var u=c.yaOptions?t.$eval(c.yaOptions):{},l=angular.isDefined(c.showAll)&&"false"!=c.showAll;
                if(l){
                    var y,p=s.getMap(),f=function(){
                        y&&a.cancel(y), y=a(function(){
                            p.geoObjects.events.remove("add",f);
                            var e=p.geoObjects.getBounds();
                            e&&p.setBounds(e)
                        },300)
                    };
                    p.geoObjects.events.add("add",f)
                }
                t.collection=new ymaps.GeoObjectCollection({},u);
                for(var d in c)if(0===d.indexOf("yaEvent")){
                    var v=o(c[d]);
                    n.subscribe(t.collection,v,d,t)
                }
                s.addGeoObjects(t.collection), t.yaAfterInit({$target:t.collection}), t.$on("$destroy",function(){
                    t.collection&&s.removeGeoObjects(t.collection)
                }), i.append(r), e(i.children())(t.$parent)
            }
        },controller:"CollectionCtrl"
    }
}]).directive("yaCluster",["yaMapSettings","yaSubscriber","$compile","templateLayoutFactory","$parse",function(e,t,a,n,o){
    return {
        require:"^yaMap",restrict:"E",scope:{yaAfterInit:"&"},compile:function(e){
            var r=e.contents();
            return e.html(""), function(e,i,c,s){
                var u=c.yaOptions?e.$eval(c.yaOptions):{};
                u&&u.clusterBalloonItemContentLayout&&(u.clusterBalloonItemContentLayout=n.get(u.clusterBalloonItemContentLayout)), u&&u.clusterBalloonContentLayout&&(u.clusterBalloonContentLayout=n.get(u.clusterBalloonContentLayout)), e.collection=new ymaps.Clusterer(u);
                for(var l in c)if(0===l.indexOf("yaEvent")){
                    var y=o(c[l]);
                    t.subscribe(e.collection,y,l,e)
                }
                s.addGeoObjects(e.collection), e.yaAfterInit({$target:e.collection}), e.$on("$destroy",function(){
                    e.collection&&s.removeGeoObjects(e.collection)
                }), i.append(r), a(i.children())(e.$parent)
            }
        },controller:"CollectionCtrl"
    }
}]).directive("yaGeoObject",["GEOMETRY_TYPES","yaSubscriber","templateLayoutFactory","$parse",function(e,t,a,n){
    return {
        restrict:"E",require:["^yaMap","?^yaCollection","?^yaCluster"],scope:{yaSource:"=",yaShowBalloon:"=",yaAfterInit:"&"},link:function(o,r,i,c){
            var s,u=c[2]||c[1]||c[0],l=i.yaOptions?o.$eval(i.yaOptions):void 0;
            l&&l.balloonContentLayout&&(l.balloonContentLayout=a.get(l.balloonContentLayout)), l&&l.iconLayout&&(l.iconLayout=a.get(l.iconLayout));
            var y=function(e,a){
                s=new ymaps.GeoObject(e,a);
                for(var r in i)if(0===r.indexOf("yaEvent")){
                    var c=n(i[r]);
                    t.subscribe(s,c,r,o)
                }
                u.addGeoObjects(s), o.yaAfterInit({$target:s}), p(i.yaEdit), f(i.yaDraw), d(o.yaShowBalloon)
            };
            o.$watch("yaSource",function(t){
                if(t)if(s){
                    s.geometry.setCoordinates(t.geometry.coordinates), s.geometry.getType()===e.CIRCLE&&s.geometry.setRadius(t.geometry.radius);
                    var a=t.properties;
                    for(var n in a)a.hasOwnProperty(n)&&s.properties.set(n,a[n])
                }else y(t,l);else s&&u.removeGeoObjects(s)
            },angular.equals);
            var p=function(e){
                angular.isDefined(e)&&"false"!==e?s&&s.editor.startEditing():angular.isDefined(e)&&s&&s.editor.stopEditing()
            },f=function(e){
                angular.isDefined(e)&&"false"!==e?s&&s.editor.startDrawing():angular.isDefined(e)&&s&&s.editor.stopDrawing()
            },d=function(e){
                e?s&&s.balloon.open():s&&s.balloon.close()
            };
            i.$observe("yaEdit",p), i.$observe("yaDraw",f), o.$watch("yaShowBalloon",d), o.$on("$destroy",function(){
                s&&u.removeGeoObjects(s)
            })
        }
    }
}]).directive("yaHotspotLayer",[function(){
    return {
        restrict:"E",require:"^yaMap",link:function(e,t,a,n){
            if(!a.yaUrlTemplate)throw new Error('not exists required attribute "url-template"');
            if(!a.yaKeyTemplate)throw new Error('not exists required attribute "key-template"');
            var o=a.yaOptions?e.$eval(a.yaOptions):void 0;
            n.addHotspotLayer(a.yaUrlTemplate,a.yaKeyTemplate,o)
        }
    }
}]).directive("yaImageLayer",[function(){
    return {
        restrict:"E",require:"^yaMap",link:function(e,t,a,n){
            if(!a.yaUrlTemplate)throw new Error('not exists required attribute "url-template"');
            var o=a.yaOptions?e.$eval(a.yaOptions):void 0;
            n.addImageLayer(a.yaUrlTemplate,o)
        }
    }
}]).directive("yaDragger",["yaSubscriber","$parse","mapApiLoad",function(e,t,a){
    return {
        restrict:"EA",scope:{yaAfterInit:"&"},link:function(n,o,r){
            var i=r.yaOptions?n.$eval(r.yaOptions):{};
            a(function(){
                i.autoStartElement=o[0];
                var a=new ymaps.util.Dragger(i);
                for(var c in r)if(0===c.indexOf("yaEvent")){
                    var s=t(r[c]);
                    e.subscribe(a,s,c,n)
                }
                n.yaAfterInit({$target:a})
            })
        }
    }
}]);